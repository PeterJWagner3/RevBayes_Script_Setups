i <- i+1
while (nexusfile[s,i]!=" " && nexusfile[s,i]!='\t' && i<ncol(nexusfile))	{
if (nexusfile[s,i]!="_")	{
taxa[tx] <- paste0(taxa[tx],as.character(nexusfile[s,i]))
} else taxa[tx] <- paste0(taxa[tx]," ")
i <- i+1
}
}	else {
taxa[tx] <- nexusfile[s,2]
i <- 3
while (nexusfile[s,i]!=" " && nexusfile[s,i+1]!=" " && i<ncol(nexusfile))	{
taxa[tx] <- paste0(taxa[tx],as.character(nexusfile[s,i]))
i <- i+1
}
}
# now, get to characters
while ((nexusfile[s,i]==" " || nexusfile[s,i]=="\t") && i<ncol(nexusfile))
i <- i+1
}
k <- i
endline <- match("\n",nexusfile[s,])
if (is.na(endline))	endline <- length(nexusfile[s,])
if ((endline-k)==(nchars+extra))	{
dummy <- nexusfile[s,k:(endline-1)]
dummy[dummy=="?"] <- UNKNOWN
dummy[dummy==gap_code] <- INAP
letterstate <- dummy
dummy <- sapply(letterstate,convert_letter_state_to_numeric)
chmatrix[tx,] <- as.numeric(dummy[1:nchars])
if (strat>0)	{
strat_ranges[tx,1] <- strat_ranges[tx,2] <- as.numeric(dummy[strat])
if (range>0)	strat_ranges[tx,2] <- as.numeric(dummy[range])
}
if (geog>0)	geography[tx]=as.numeric(nexusfile[geog,i])
for (c in 1:nchars)	{
if ((chmatrix[tx,c]+1)>nstates[c]) nstates[c] <- chmatrix[tx,c]+1
}
} else	{
for (c in 1:(nchars+extra))	{
if (c<=nchars)	{
if (nexusfile[s,i]=="(" || nexusfile[s,i]=="{")	{
if (polymorphs==TRUE || polymorphs==1)	{
i <- i+1
w <- as.numeric(nexusfile[s,i])
chmatrix[tx,c] <- -1*as.numeric(nexusfile[s,i])
if ((1+w)>nstates[c])  nstates[c] <- 1+w
i <- i+1
j <- 1
while (nexusfile[s,i]!=")" && nexusfile[s,i]!="}" && i<ncol(nexusfile))	{
if (nexusfile[s,i]!="," && nexusfile[s,i]!=" ")	{
w <- as.numeric(nexusfile[s,i])
if ((w+1)>nstates[c])	nstates[c] <- w+1
chmatrix[tx,c] <- chmatrix[tx,c]-((10^j)*w)
i <- i+1
j <- j+1
} else {
i <- i+1
}
}
}	else {
chmatrix[tx,c] <- UNKNOWN
while (nexusfile[s,i]!=')' && nexusfile[s,i]!="}")	i <- i+1
}
} else if (nexusfile[s,i]=="?")	{
chmatrix[tx,c] <- UNKNOWN
}	else if (nexusfile[s,i]==gap_code)	{
chmatrix[tx,c] <- INAP
} else if (nexusfile[s,i]>="A" && nexusfile[s,i]<="Z")  {
chmatrix[tx,c] <- convert_letter_state_to_numeric(nexusfile[s,i])
}	else if (nexusfile[s,i]>="0" && nexusfile[s,i]<="9") {
chmatrix[tx,c] <- as.numeric(nexusfile[s,i])
}
if ((chmatrix[tx,c]+1)>nstates[c]) nstates[c] <- chmatrix[tx,c]+1
i <- i+1
}  else {
if (c==strat)	{
if (nexusfile[s,i]>="0" && nexusfile[s,i]<='9')	{
strat_ranges[tx,1]=as.numeric(nexusfile[s,i])
} else if (nexusfile[s,i]>="A" && nexusfile[s,i]<="Z")	{
strat_ranges[tx,1]=convert_letter_state_to_numeric(nexusfile[s,i])
}
if (range==0)	strat_ranges[tx,2] <- strat_ranges[tx,1]
i <- i+1
} else if (c==range)	{
if (nexusfile[s,i]>="0" && nexusfile[s,i]<='9')	{
strat_ranges[tx,2]=as.numeric(nexusfile[s,i])
} else if (nexusfile[s,i]>="A" && nexusfile[s,i]<="Z")	{
strat_ranges[tx,2]=convert_letter_state_to_numeric(nexusfile[s,i])
}
i <- i+1
} else if (c==geog)	{
if (nexusfile[s,i]>="0" && nexusfile[s,i]<='9')	{
geography[tx]=as.numeric(nexusfile[s,i])
} else if (nexusfile[s,i]>="A" && nexusfile[s,i]<="Z")	{
geography[tx]=convert_letter_state_to_numeric(nexusfile[s,i])
}
}
} # end non-morphological data
if (nexusfile[s,i+1]=="\n" || i==(mxln-1)) c <- nchars+extra
}
}
#	s <- s+1
}
row.names(chmatrix) <- taxa
if (strat!=0 && geog!=0 && outgroup!=-1)  {
output <- (list(taxa,chmatrix,nstates,strat_ranges,geography,outgroup))
names(output) <-  c("OTUs","Matrix","States","Stratigraphic_Ranges","Geography")
} else if (strat!=0)  {
output <- (list(taxa,chmatrix,nstates,strat_ranges,outgroup))
names(output) <-  c("OTUs","Matrix","States","Stratigraphic_Ranges","Outgroup")
} else if (geog!=0)  {
output <- (list(taxa,chmatrix,nstates,geography,outgroup))
names(output) <-  c("OTUs","Matrix","States","Geography","Outgroup")
} else {
output <- (list(taxa,chmatrix,nstates,outgroup))
names(output) <-  c("OTUs","Matrix","States","Outgroup")
}
accio_data_from_nexus_file <- function(nexus_file_name, polymorphs=TRUE, UNKNOWN=-11, INAP=-22)	{
# nexus_file_name: name of nexus file (e.g., "Phacopidae_Snow_2000.nex")
# polymorphs: boolean, if TRUE, then recode "1,2" as "-21"; otherwise, treat as unknown
# UNKNOWN: value substituting for "?"
# INAP: value substituting for gap ("-")
nexus <- scan(file=nexus_file_name,what=character(),sep="\n")
ml <- 0
i <- 1
#while (i<=length(nexus))	{
#	print(i)
#	nexus[i] <- scourgify_nexus_text(nexus_line = nexus[i])
#	j <- strsplit(nexus[i],split="",fixed=TRUE)[[1]]
#	if (length(j)>ml) ml <- length(j)
#	i <- i+1
#	}
for (i in 1:length(nexus))  {
nexus[i] <- scourgify_nexus_text(nexus_line = nexus[i])
j <- strsplit(nexus[i],split="",fixed=TRUE)[[1]]
if (length(j)>ml) ml <- length(j)
}
ml <- ml+1	# LENGTH OF LONGEST LINE
# file is now a vector of characters.  Turn it into a matrix with one char per cell
nexusfile <- matrix("\n",length(nexus),ml)
for (i in 1:length(nexus))  {
j <- strsplit(nexus[i],split="",fixed=TRUE)[[1]]
for (k in 1:length(j))      nexusfile[i,k] <- j[k]
if ((length(j)+2)<ml)
for (k in (length(j)+2):ml) nexusfile[i,k] <- ""
}
top <- 0
ln <- 1		# this is the row with the word "Matrix": character data starts next.
while (top==0)	{
if ((nexusfile[ln,1]=="M" && nexusfile[ln,2]=="A") || (nexusfile[ln,1]=="\t" && (nexusfile[ln,2]=="M" && nexusfile[ln,3]=="A"))) {
top <- ln
}	else {
ln <- ln+1
}
}
top <- top+1	# this will give the first row of data
# skip the comment text denoting character numbers (if present)
while(nexusfile[top,1]=="[" || nexusfile[top,1]==" ") top <- top+1
tally_chars <- strat <- range <- geog <- 0
gap_code <- "-"
for (i in 2:top)  {
ch_num <- 0
while ((nexusfile[i,1]=="[" || nexusfile[i,1]=="\n") && i<top)	i <- i+1
for (j in 1:ml)	{
if (nexusfile[i,j]=="N" && (nexusfile[i,j+1]=="T" && nexusfile[i,j+2]=="A"))	{
while (nexusfile[i,j]!="=")	j <- j+1
j <- j+1
notu <- 0
while (nexusfile[i,j]!=" " && (nexusfile[i,j]!=";" && nexusfile[i,j]!="\n"))	{
notu <- 10*notu
notu <- notu+as.numeric(nexusfile[i,j])
j <- j+1
}
ch_num <- 0
}	# end counting of taxa
if (nexusfile[i,j]=="N" && (nexusfile[i,j+1]=="C" && nexusfile[i,j+2]=="H"))	{
while (nexusfile[i,j]!="=")	j <- j+1
j <- j+1
nchars <- 0
while (nexusfile[i,j]!=" " && (nexusfile[i,j]!=";" && nexusfile[i,j]!="\n"))	{
nchars <- 10*nchars
nchars <- nchars+as.numeric(nexusfile[i,j])
j <- j+1
}
ch_num <- 0
}	# end counting of characters
if (nexusfile[i,j]=="C" && (nexusfile[i,j+1]=="H" && (nexusfile[i,j+2]=="A" && (nexusfile[i,j+3]=="R" && (nexusfile[i,j+4]=="S" && nexusfile[i,j+5]=="T")))))	{
tally_chars <- 1
j <- ml
}
if (tally_chars==1 && j<ml) {
if (nexusfile[i,j]>="0" && nexusfile[i,j]<="9")	{
if (j>1 && (nexusfile[i,j-1]==" " || nexusfile[i,j-1]=="\t"))	{
ch_num <- as.numeric(nexusfile[i,j])
}	else {
ch_num <- (10*ch_num)+as.numeric(nexusfile[i,j])
}
}
if (nexusfile[i,j]=="F" && nexusfile[i,j+1]=="A")	strat <- ch_num
if (nexusfile[i,j]=="L" && nexusfile[i,j+1]=="A")	range <- ch_num
if (nexusfile[i,j]=="G" && (nexusfile[i,j+1]=="e" && (nexusfile[i,j+2]=="o" && nexusfile[i,j+3]=="g")))	geog <- ch_num
}	# looking for state names
if (nexusfile[i,j]=="\n")	j <- ml
if (nexusfile[i,j]=="G" && (nexusfile[i,j+1]=="A" && (nexusfile[i,j+2]=="P" && nexusfile[i,j+3]=="=")))
gap_code <- nexusfile[i,j+4];
}	# finish searching line
}
extra <- 0
if (strat>0)	{
if (range>0)	{
nchars <- nchars-2
extra <- 2
} else {
nchars <- nchars-1
extra <- 1
}
strat_ranges <- matrix(0,notu,2)
}
if (geog>0)	{
nchars <- nchars-1
geography <- vector(length=notu)
extra <- extra+1
}
taxa <- vector(length=notu)
nstates <- array(0,dim=nchars)
chmatrix <- matrix(0,notu,nchars)
tx <- 1
# look for outgroup designation
outgroup <- -1
if (!is.na(match("BEGIN SETS;",nexus)))	{
tx_pt <- 1+match("BEGIN SETS;",nexus)	# look at taxon partitions
while (outgroup==-1 && nexusfile[tx_pt,1]=="\t" && nexusfile[tx_pt,2]=="T" && nexusfile[tx_pt,3]=="A" && nexusfile[tx_pt,4]=="X" && nexusfile[tx_pt,5]=="P" && nexusfile[tx_pt,6]=="A")	{
j <- strsplit(nexus[tx_pt],split=" ",fixed=TRUE)[[1]]
if (!is.na(match("Outgroup",j)))	{
otg <- match("Outgroup",j)+1
while (j[otg]==":" || j[otg]==" " || j[otg]=="")	otg <- otg+1
out <- strsplit(j[otg],split="",fixed=TRUE)[[1]]
a <- 1
outgroup <- 0
while (out[a]!="," && out[a]!=";")	{
outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
}
}
tx_pt <- tx_pt+1
}
}
mxln <- length(nexusfile[top,])
s <- top
# te all of the taxon names
for (tx in 1:notu)	{
# first, read taxon name
#### look for quotations###
s <- top+tx-1
if (nexusfile[s,1]=="'" || nexusfile[s,2]=="'")	{
jj <- ((1:length(nexusfile[s,]))[nexusfile[s,] %in% "'"])
i <- max((1:length(nexusfile[s,]))[nexusfile[s,] %in% "'"])
taxa[tx] <- pracma::strcat(nexusfile[s,(jj[1]+1):(jj[2]-1)])
i <- i+1
while (nexusfile[s,i]==" " && i<ncol(nexusfile))	i <- i+1
}	else	{
i <- 1
if (nexusfile[s,1]!="\"")  {
while (nexusfile[s,i]=="\t")	i <- i+1
taxa[tx] <- nexusfile[s,i]
i <- i+1
while (nexusfile[s,i]!=" " && nexusfile[s,i]!='\t' && i<ncol(nexusfile))	{
if (nexusfile[s,i]!="_")	{
taxa[tx] <- paste0(taxa[tx],as.character(nexusfile[s,i]))
} else taxa[tx] <- paste0(taxa[tx]," ")
i <- i+1
}
}	else {
taxa[tx] <- nexusfile[s,2]
i <- 3
while (nexusfile[s,i]!=" " && nexusfile[s,i+1]!=" " && i<ncol(nexusfile))	{
taxa[tx] <- paste0(taxa[tx],as.character(nexusfile[s,i]))
i <- i+1
}
}
# now, get to characters
while ((nexusfile[s,i]==" " || nexusfile[s,i]=="\t") && i<ncol(nexusfile))
i <- i+1
}
k <- i
endline <- match("\n",nexusfile[s,])
if (is.na(endline))	endline <- length(nexusfile[s,])
if ((endline-k)==(nchars+extra))	{
dummy <- nexusfile[s,k:(endline-1)]
dummy[dummy=="?"] <- UNKNOWN
dummy[dummy==gap_code] <- INAP
letterstate <- dummy
dummy <- sapply(letterstate,convert_letter_state_to_numeric)
chmatrix[tx,] <- as.numeric(dummy[1:nchars])
if (strat>0)	{
strat_ranges[tx,1] <- strat_ranges[tx,2] <- as.numeric(dummy[strat])
if (range>0)	strat_ranges[tx,2] <- as.numeric(dummy[range])
}
if (geog>0)	geography[tx]=as.numeric(nexusfile[geog,i])
for (c in 1:nchars)	{
if ((chmatrix[tx,c]+1)>nstates[c]) nstates[c] <- chmatrix[tx,c]+1
}
} else	{
for (c in 1:(nchars+extra))	{
if (c<=nchars)	{
if (nexusfile[s,i]=="(" || nexusfile[s,i]=="{")	{
if (polymorphs==TRUE || polymorphs==1)	{
i <- i+1
w <- as.numeric(nexusfile[s,i])
chmatrix[tx,c] <- -1*as.numeric(nexusfile[s,i])
if ((1+w)>nstates[c])  nstates[c] <- 1+w
i <- i+1
j <- 1
while (nexusfile[s,i]!=")" && nexusfile[s,i]!="}" && i<ncol(nexusfile))	{
if (nexusfile[s,i]!="," && nexusfile[s,i]!=" ")	{
w <- as.numeric(nexusfile[s,i])
if ((w+1)>nstates[c])	nstates[c] <- w+1
chmatrix[tx,c] <- chmatrix[tx,c]-((10^j)*w)
i <- i+1
j <- j+1
} else {
i <- i+1
}
}
}	else {
chmatrix[tx,c] <- UNKNOWN
while (nexusfile[s,i]!=')' && nexusfile[s,i]!="}")	i <- i+1
}
} else if (nexusfile[s,i]=="?")	{
chmatrix[tx,c] <- UNKNOWN
}	else if (nexusfile[s,i]==gap_code)	{
chmatrix[tx,c] <- INAP
} else if (nexusfile[s,i]>="A" && nexusfile[s,i]<="Z")  {
chmatrix[tx,c] <- convert_letter_state_to_numeric(nexusfile[s,i])
}	else if (nexusfile[s,i]>="0" && nexusfile[s,i]<="9") {
chmatrix[tx,c] <- as.numeric(nexusfile[s,i])
}
if ((chmatrix[tx,c]+1)>nstates[c]) nstates[c] <- chmatrix[tx,c]+1
i <- i+1
}  else {
if (c==strat)	{
if (nexusfile[s,i]>="0" && nexusfile[s,i]<='9')	{
strat_ranges[tx,1]=as.numeric(nexusfile[s,i])
} else if (nexusfile[s,i]>="A" && nexusfile[s,i]<="Z")	{
strat_ranges[tx,1]=convert_letter_state_to_numeric(nexusfile[s,i])
}
if (range==0)	strat_ranges[tx,2] <- strat_ranges[tx,1]
i <- i+1
} else if (c==range)	{
if (nexusfile[s,i]>="0" && nexusfile[s,i]<='9')	{
strat_ranges[tx,2]=as.numeric(nexusfile[s,i])
} else if (nexusfile[s,i]>="A" && nexusfile[s,i]<="Z")	{
strat_ranges[tx,2]=convert_letter_state_to_numeric(nexusfile[s,i])
}
i <- i+1
} else if (c==geog)	{
if (nexusfile[s,i]>="0" && nexusfile[s,i]<='9')	{
geography[tx]=as.numeric(nexusfile[s,i])
} else if (nexusfile[s,i]>="A" && nexusfile[s,i]<="Z")	{
geography[tx]=convert_letter_state_to_numeric(nexusfile[s,i])
}
}
} # end non-morphological data
if (nexusfile[s,i+1]=="\n" || i==(mxln-1)) c <- nchars+extra
}
}
#	s <- s+1
}
#x <- list(taxa,chmatrix,strat_ranges,geography)
#return (list(taxa,chmatrix,strat_ranges,geography))
row.names(chmatrix) <- taxa
if (strat!=0 && geog!=0 && outgroup!=-1)  {
output <- (list(taxa,chmatrix,nstates,strat_ranges,geography,outgroup))
names(output) <-  c("OTUs","Matrix","States","Stratigraphic_Ranges","Geography")
} else if (strat!=0)  {
output <- (list(taxa,chmatrix,nstates,strat_ranges,outgroup))
names(output) <-  c("OTUs","Matrix","States","Stratigraphic_Ranges","Outgroup")
} else if (geog!=0)  {
output <- (list(taxa,chmatrix,nstates,geography,outgroup))
names(output) <-  c("OTUs","Matrix","States","Geography","Outgroup")
} else {
output <- (list(taxa,chmatrix,nstates,outgroup))
names(output) <-  c("OTUs","Matrix","States","Outgroup")
}
return(output)
}
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs)
nchars <- length(xxx$States)
clean_characters <- scourgify_character_matrix(charmatrix=xxx$Matrix);
apos <- count_autapomorphies(chmatrix=clean_characters,chstates=xxx$States);
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
identicals <- 0
for (tx in 1:(notu-1))	{
others <- (1:notu)[(1:notu) > tx]
identicals <- identicals + (sum(disp[tx,others]==0))
}
#	identicals <- identicals/2
missing <- sum(clean_characters==UNKNOWN)/(notu*nchars)
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
if (length(apos)>0)	{
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals));
} else	{
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,0,0,0,missing,identicals));
}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs)
nchars <- length(xxx$States)
clean_characters <- scourgify_character_matrix(charmatrix=xxx$Matrix);
apos <- count_autapomorphies(chmatrix=clean_characters,chstates=xxx$States);
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
identicals <- 0
for (tx in 1:(notu-1))	{
others <- (1:notu)[(1:notu) > tx]
identicals <- identicals + (sum(disp[tx,others]==0))
}
#	identicals <- identicals/2
missing <- sum(clean_characters==UNKNOWN)/(notu*nchars)
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
if (length(apos)>0)	{
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals));
} else	{
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,0,0,0,missing,identicals));
}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
analysis <- "Crinoids"
data_sets <- read.table(paste(analysis,".txt",sep=""))
UNKNOWN <- -11
INAP <- -22
#matrix_one <- paste("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/",data_sets[1,1],sep="")
#setwd("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/")
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs)
nchars <- length(xxx$States)
clean_characters <- scourgify_character_matrix(charmatrix=xxx$Matrix);
apos <- count_autapomorphies(chmatrix=clean_characters,chstates=xxx$States);
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
identicals <- 0
for (tx in 1:(notu-1))	{
others <- (1:notu)[(1:notu) > tx]
identicals <- identicals + (sum(disp[tx,others]==0))
}
#	identicals <- identicals/2
missing <- sum(clean_characters==UNKNOWN)/(notu*nchars)
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
if (length(apos)>0)	{
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals));
} else	{
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,0,0,0,missing,identicals));
}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
data_sets
setwd("~/Documents/R Projects/ Data/Original Data Matrices/12. Crinoids")
analysis <- "Crinoids"
data_sets <- read.table(paste(analysis,".txt",sep=""))
UNKNOWN <- -11
INAP <- -22
#matrix_one <- paste("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/",data_sets[1,1],sep="")
#setwd("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/")
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs)
nchars <- length(xxx$States)
clean_characters <- scourgify_character_matrix(charmatrix=xxx$Matrix);
apos <- count_autapomorphies(chmatrix=clean_characters,chstates=xxx$States);
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
identicals <- 0
for (tx in 1:(notu-1))	{
others <- (1:notu)[(1:notu) > tx]
identicals <- identicals + (sum(disp[tx,others]==0))
}
#	identicals <- identicals/2
missing <- sum(clean_characters==UNKNOWN)/(notu*nchars)
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
if (length(apos)>0)	{
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals));
} else	{
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,0,0,0,missing,identicals));
}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
apomorphy_totals
