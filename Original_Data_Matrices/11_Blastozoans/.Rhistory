j <- strsplit(nexus[i],split="",fixed=TRUE)[[1]]
if (length(j)>ml) ml <- length(j)
}
ml <- ml+1	# LENGTH OF LONGEST LINE
# file is now a vector of characters.  Turn it into a matrix with one char per cell
nexusfile <- matrix("\n",length(nexus),ml)
for (i in 1:length(nexus))  {
j <- strsplit(nexus[i],split="",fixed=TRUE)[[1]]
for (k in 1:length(j))      nexusfile[i,k] <- j[k]
if ((length(j)+2)<ml)
for (k in (length(j)+2):ml) nexusfile[i,k] <- ""
}
top <- 0
ln <- 1		# this is the row with the word "Matrix": character data starts next.
while (top==0)	{
if ((nexusfile[ln,1]=="M" && nexusfile[ln,2]=="A") || (nexusfile[ln,1]=="\t" && (nexusfile[ln,2]=="M" && nexusfile[ln,3]=="A"))) {
top <- ln
}	else {
ln <- ln+1
}
}
top <- top+1	# this will give the first row of data
# skip the comment text denoting character numbers (if present)
while(nexusfile[top,1]=="[" || nexusfile[top,1]==" ") top <- top+1
tally_chars <- strat <- range <- geog <- 0
gap_code <- "-"
for (i in 2:top)  {
ch_num <- 0
while ((nexusfile[i,1]=="[" || nexusfile[i,1]=="\n") && i<top)	i <- i+1
for (j in 1:ml)	{
if (nexusfile[i,j]=="N" && (nexusfile[i,j+1]=="T" && nexusfile[i,j+2]=="A"))	{
while (nexusfile[i,j]!="=")	j <- j+1
j <- j+1
notu <- 0
while (nexusfile[i,j]!=" " && (nexusfile[i,j]!=";" && nexusfile[i,j]!="\n"))	{
notu <- 10*notu
notu <- notu+as.numeric(nexusfile[i,j])
j <- j+1
}
ch_num <- 0
}	# end counting of taxa
if (nexusfile[i,j]=="N" && (nexusfile[i,j+1]=="C" && nexusfile[i,j+2]=="H"))	{
while (nexusfile[i,j]!="=")	j <- j+1
j <- j+1
nchars <- 0
while (nexusfile[i,j]!=" " && (nexusfile[i,j]!=";" && nexusfile[i,j]!="\n"))	{
nchars <- 10*nchars
nchars <- nchars+as.numeric(nexusfile[i,j])
j <- j+1
}
ch_num <- 0
}	# end counting of characters
if (nexusfile[i,j]=="C" && (nexusfile[i,j+1]=="H" && (nexusfile[i,j+2]=="A" && (nexusfile[i,j+3]=="R" && (nexusfile[i,j+4]=="S" && nexusfile[i,j+5]=="T")))))	{
tally_chars <- 1
j <- ml
}
if (tally_chars==1 && j<ml) {
if (nexusfile[i,j]>="0" && nexusfile[i,j]<="9")	{
if (j>1 && (nexusfile[i,j-1]==" " || nexusfile[i,j-1]=="\t"))	{
ch_num <- as.numeric(nexusfile[i,j])
}	else {
ch_num <- (10*ch_num)+as.numeric(nexusfile[i,j])
}
}
if (nexusfile[i,j]=="F" && nexusfile[i,j+1]=="A")	strat <- ch_num
if (nexusfile[i,j]=="L" && nexusfile[i,j+1]=="A")	range <- ch_num
if (nexusfile[i,j]=="G" && (nexusfile[i,j+1]=="e" && (nexusfile[i,j+2]=="o" && nexusfile[i,j+3]=="g")))	geog <- ch_num
}	# looking for state names
if (nexusfile[i,j]=="\n")	j <- ml
if (nexusfile[i,j]=="G" && (nexusfile[i,j+1]=="A" && (nexusfile[i,j+2]=="P" && nexusfile[i,j+3]=="=")))
gap_code <- nexusfile[i,j+4];
}	# finish searching line
}
extra <- 0
if (strat>0)	{
if (range>0)	{
nchars <- nchars-2
extra <- 2
} else {
nchars <- nchars-1
extra <- 1
}
strat_ranges <- matrix(0,notu,2)
}
if (geog>0)	{
nchars <- nchars-1
geography <- vector(length=notu)
extra <- extra+1
}
taxa <- vector(length=notu)
nstates <- array(0,dim=nchars)
chmatrix <- matrix(0,notu,nchars)
tx <- 1
# look for outgroup designation
outgroup <- -1
if (!is.na(match("BEGIN SETS;",nexus)))	{
tx_pt <- 1+match("BEGIN SETS;",nexus)	# look at taxon partitions
while (outgroup==-1 && nexusfile[tx_pt,1]=="\t" && nexusfile[tx_pt,2]=="T" && nexusfile[tx_pt,3]=="A" && nexusfile[tx_pt,4]=="X" && nexusfile[tx_pt,5]=="P" && nexusfile[tx_pt,6]=="A")	{
j <- strsplit(nexus[tx_pt],split=" ",fixed=TRUE)[[1]]
if (!is.na(match("Outgroup",j)))	{
otg <- match("Outgroup",j)+1
while (j[otg]==":" || j[otg]==" " || j[otg]=="")	otg <- otg+1
out <- strsplit(j[otg],split="",fixed=TRUE)[[1]]
a <- 1
outgroup <- 0
while (out[a]!="," && out[a]!=";")	{
outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
}
}
tx_pt <- tx_pt+1
}
}
outgroup
match("BEGIN SETS;",nexus)
!is.na(match("BEGIN SETS;",nexus))
tx_pt <- 1+match("BEGIN SETS;",nexus)	# look at taxon partitions
tx_pt
tx_pt <- 1+match("BEGIN SETS;",nexus)	# look at taxon partitions
tx_pt
nexusfile[tx_pt,1]
outgroup==-1 && nexusfile[tx_pt,1]=="\t" && nexusfile[tx_pt,2]=="T" && nexusfile[tx_pt,3]=="A" && nexusfile[tx_pt,4]=="X" && nexusfile[tx_pt,5]=="P" && nexusfile[tx_pt,6]=="A"
tx_pt
j <- strsplit(nexus[tx_pt],split=" ",fixed=TRUE)[[1]]
j
while (j[1]=="\t")	j <- j[2:length(j)]
j
j[1]=="\t"
j <- strsplit(nexus[tx_pt],split=" ",fixed=TRUE)[[1]]
j
j <- strsplit(nexus[tx_pt],split="",fixed=TRUE)[[1]]
j
j <- strsplit(nexus[tx_pt],split=" ",fixed=TRUE)[[1]]
j
!is.na(match("BEGIN SETS;",nexus))
tx_pt <- 1+match("BEGIN SETS;",nexus)	# look at taxon partitions
tx_pt
j <- strsplit(nexus[tx_pt],split=" ",fixed=TRUE)[[1]]
j
nexusfile[tx_pt,1]=="\t" && nexusfile[tx_pt,2]=="T" && nexusfile[tx_pt,3]=="A" && nexusfile[tx_pt,4]=="X" && nexusfile[tx_pt,5]=="P" && nexusfile[tx_pt,6]=="A"
outgroup==-1 && nexusfile[tx_pt,1]=="\t" && nexusfile[tx_pt,2]=="T" && nexusfile[tx_pt,3]=="A" && nexusfile[tx_pt,4]=="X" && nexusfile[tx_pt,5]=="S" && nexusfile[tx_pt,6]=="E")	{
outgroup==-1 && nexusfile[tx_pt,1]=="\t" && nexusfile[tx_pt,2]=="T" && nexusfile[tx_pt,3]=="A" && nexusfile[tx_pt,4]=="X" && nexusfile[tx_pt,5]=="S" && nexusfile[tx_pt,6]=="E")
outgroup==-1 && nexusfile[tx_pt,1]=="\t" && nexusfile[tx_pt,2]=="T" && nexusfile[tx_pt,3]=="A" && nexusfile[tx_pt,4]=="X" && nexusfile[tx_pt,5]=="S" && nexusfile[tx_pt,6]=="E"
j <- strsplit(nexus[tx_pt],split=" ",fixed=TRUE)[[1]]
j
!is.na(match("Outgroup",j))
otg <- match("Outgroup",j)+1
otg
!is.na(match("Outgroup",j)) || !is.na(match("outgroup",j)))
!is.na(match("Outgroup",j)) || !is.na(match("outgroup",j))
otg <- match("outgroup",tolower(j))+1
otg
tolower(j)
while (j[otg]==":" || j[otg]==" " || j[otg]=="")	otg <- otg+1
otg
out <- strsplit(j[otg],split="",fixed=TRUE)[[1]]
out
a <- 1
outgroup <- 0
while (out[a]!="," && out[a]!=";")	{
outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
}
a
a <- 1
outgroup <- 0
out[a]!=","
out[a]!=";"
a
out[a]!="," && out[a]!=";"
out[a]
out[a]!="
,"
out[a]!="," && out[a]!=";" && out[a]!="="
out[a]!="="
a <- a+1
a
out[a]
otg <- match("outgroup",tolower(j))+1
otg
j
otg
!is.na(match("outgroup",tolower(j)))
out <- j[length(j)];
out
jj <- strsplit(out,split="",fixed=TRUE)[[1]]
jj
jj[length(jj)]
jj <- strsplit(out,split="",fixed=TRUE)[[1]]
while (jj[length(jj)]==";" || jj[length(jj)]==" " || jj[length(jj)]==",")
jj <- jj[1:((length(jj)-1))]
jj
jj
out <- j[length(j)];
out <- strsplit(out,split="",fixed=TRUE)[[1]]
while (out[length(out)]==";" || out[length(out)]==" " || out[length(out)]==",")
out <- out[1:((length(out)-1))]
out
a <- 1
outgroup <- 0
length(out)
outg <- (10*outg)+as.numeric(out[a]);
outg <- 0;
a
outg <- (10*outg)+as.numeric(out[a]);
outg
out[3] <- "3"
out
a
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
a
out[a]=="-"
outgroup <- c(outgroup,outg);
outgroup
through <- TRUE;
outgroup <- c();
outg <- 0;
a <- 1
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outg
outgroup
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outgroup
through
outg <- 0
a <- a+1
a
out[a]=="-"
out[a]
a <- 3
out[a]=="-"
out[a]==" "
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outg
through
outgroup <- c(outgroup,seq(outgroup[length(outgroup)],outg,by=1));
outgroup
outgroup <- 1
seq(1+outgroup[length(outgroup)],outg,by=1)
outgroup <- c(outgroup,seq(1+outgroup[length(outgroup)],outg,by=1));
outgroup
out <- c(out," 5 7")
out
outg <- 0;
outgroup <- c();
through <- FALSE;
a <- 1
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outgroup
a
a <- 1
outg <- 0;
outgroup <- c();
through <- FALSE;
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(1+outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outgroup
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(1+outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outgroup
through
a
out[a]=="-"
out[a]==" "
outg <- (10*outg)+as.numeric(out[a]);
outg
a <- a+1
outgroup
out[a]=="-"
out[a]==" "
out[a]
out[a] <- " "
out
out <- c(out,"5"," ","7")
out
out[a]==" "
through
outgroup <- c(outgroup,seq(1+outgroup[length(outgroup)],outg,by=1));
outgroup
out[a]
outg <- 0
through <- FALSE;
a <- a+1
outgroup
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(1+outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outgroup
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(1+outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outgroup
outg <- 0;
outgroup <- c();
through <- FALSE;
#			while (out[a]!="," && out[a]!=";")	{
for (a in 1:length(out))	{
if (out[a]=="-")	{
# add taxon to list of outgroups
outgroup <- c(outgroup,outg);
through <- TRUE;
outg <- 0
} else if (out[a]==" ")	{
if (through)	{
outgroup <- c(outgroup,seq(1+outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outg <- 0
through <- FALSE;
} else	{
outg <- (10*outg)+as.numeric(out[a]);
}
#				if (out[a]!="=")
#					outgroup <- (10*outgroup)+as.numeric(out[a])
a <- a+1
outgroup
}
if (through)	{
outgroup <- c(outgroup,seq(1+outgroup[length(outgroup)],outg,by=1));
} else	{
outgroup <- c(outgroup,outg);
}
outgroup
