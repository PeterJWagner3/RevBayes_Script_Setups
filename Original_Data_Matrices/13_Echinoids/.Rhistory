clean_characters_binary <- array(0,dim=c(notu,1));
clean_characters_binary[,1] <- clean_characters[,binaries];
} else	{
clean_characters_binary <- clean_characters[,binaries];
}
autapomorphic_binaries <- count_autapomorphic_characters(chmatrix=clean_characters_binary,nstates[binaries]);
} else	{
autapomorphic_binaries <- 0;
}
if (length(multistates)>0)	{
if (length(multistates)==1)	{
clean_characters_multistate <- array(0,dim=c(notu,1))
clean_characters_multistate[,1] <- clean_characters[,multistates];
} else	{
clean_characters_multistate <- clean_characters[,multistates];
}
autapomorphic_multistates_1 <- count_autapomorphic_characters(chmatrix=clean_characters_multistate,nstates[multistates]);
autapomorphic_multistates_2 <- count_autapomorphic_states(chmatrix=clean_characters_multistate,nstates[multistates]);
} else	{
autapomorphic_multistates_1 <- autapomorphic_multistates_2 <- 0;
}
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters[,useful],states=nstates[useful],types=rep(0,useful_characters));
reducibles <- identicals <- 0;
#	for (tx in 1:(notu-1))	{
while (tx < notu)	{
others <- (1:notu)[(1:notu) > tx];
identicals <- identicals + (sum(disp[tx,others]==0));
if (sum(disp[tx,others]==0)>0)	reducibles <- reducibles +1
tx <- tx+1;
identicals;
reducibles;
}
#	identicals <- identicals/2
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,useful_characters,binary_characters,multistate_characters,total_states,autapomorphic_binaries,autapomorphic_multistates_1,autapomorphic_multistates_2,missing,identicals,reducibles));
#	if (length(apos)>0)	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,binary_characters,multistate_characters,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals,reducibles));
#		} else	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),binary_characters,multistate_characters,notu,nchars,0,0,0,missing,identicals));
#		}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Total_States","Autapomorphic_Binary","Autapomoprhic_Multistate","Autapomoprhic_Multistate_States","Prop_Missing","Identicals","Reducibles")
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
#colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
setwd("~/Documents/R Projects/ Data/Original Data Matrices/07. Crustaceans")
analysis <- "Crustaceans";
data_sets <- read.table(paste(analysis,".txt",sep=""));
UNKNOWN <- -11;
INAP <- -22;
#matrix_one <- paste("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/",data_sets[1,1],sep="")
#setwd("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/")
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1;
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs);
nchars <- length(xxx$States);
clean_characters <- scourgify_character_matrix(chmatrix=xxx$Matrix);
nstates <- count_states(chmatrix=clean_characters);
binaries <- (1:nchars)[nstates==2];
multistates <- (1:nchars)[nstates>2]
invariants <- (1:nchars)[nstates==1];
total_states <- length(invariants)+(2*length(binaries)) + sum(nstates[multistates]);
invariant_characters <- length(invariants);
binary_characters <- length(binaries);
multistate_characters <- length(multistates);
real_nchars <- invariant_characters+binary_characters+multistate_characters;
useful <- sort(c(invariants,binaries,multistates));
useful_characters <- length(useful);
missing <- sum(clean_characters[,useful]==UNKNOWN)/(notu*useful_characters);
if (length(binaries)>0)	{
if (length(binaries)==1)	{
clean_characters_binary <- array(0,dim=c(notu,1));
clean_characters_binary[,1] <- clean_characters[,binaries];
} else	{
clean_characters_binary <- clean_characters[,binaries];
}
autapomorphic_binaries <- count_autapomorphic_characters(chmatrix=clean_characters_binary,nstates[binaries]);
} else	{
autapomorphic_binaries <- 0;
}
if (length(multistates)>0)	{
if (length(multistates)==1)	{
clean_characters_multistate <- array(0,dim=c(notu,1))
clean_characters_multistate[,1] <- clean_characters[,multistates];
} else	{
clean_characters_multistate <- clean_characters[,multistates];
}
autapomorphic_multistates_1 <- count_autapomorphic_characters(chmatrix=clean_characters_multistate,nstates[multistates]);
autapomorphic_multistates_2 <- count_autapomorphic_states(chmatrix=clean_characters_multistate,nstates[multistates]);
} else	{
autapomorphic_multistates_1 <- autapomorphic_multistates_2 <- 0;
}
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters[,useful],states=nstates[useful],types=rep(0,useful_characters));
reducibles <- identicals <- 0;
#	for (tx in 1:(notu-1))	{
while (tx < notu)	{
others <- (1:notu)[(1:notu) > tx];
identicals <- identicals + (sum(disp[tx,others]==0));
if (sum(disp[tx,others]==0)>0)	reducibles <- reducibles +1
tx <- tx+1;
identicals;
reducibles;
}
#	identicals <- identicals/2
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,useful_characters,binary_characters,multistate_characters,total_states,autapomorphic_binaries,autapomorphic_multistates_1,autapomorphic_multistates_2,missing,identicals,reducibles));
#	if (length(apos)>0)	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,binary_characters,multistate_characters,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals,reducibles));
#		} else	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),binary_characters,multistate_characters,notu,nchars,0,0,0,missing,identicals));
#		}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Total_States","Autapomorphic_Binary","Autapomoprhic_Multistate","Autapomoprhic_Multistate_States","Prop_Missing","Identicals","Reducibles")
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
#colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
setwd("~/Documents/R Projects/ Data/Original Data Matrices/08. Stylophorans")
analysis <- "Stylophorans";
data_sets <- read.table(paste(analysis,".txt",sep=""));
UNKNOWN <- -11;
INAP <- -22;
#matrix_one <- paste("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/",data_sets[1,1],sep="")
#setwd("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/")
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1;
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs);
nchars <- length(xxx$States);
clean_characters <- scourgify_character_matrix(chmatrix=xxx$Matrix);
nstates <- count_states(chmatrix=clean_characters);
binaries <- (1:nchars)[nstates==2];
multistates <- (1:nchars)[nstates>2]
invariants <- (1:nchars)[nstates==1];
total_states <- length(invariants)+(2*length(binaries)) + sum(nstates[multistates]);
invariant_characters <- length(invariants);
binary_characters <- length(binaries);
multistate_characters <- length(multistates);
real_nchars <- invariant_characters+binary_characters+multistate_characters;
useful <- sort(c(invariants,binaries,multistates));
useful_characters <- length(useful);
missing <- sum(clean_characters[,useful]==UNKNOWN)/(notu*useful_characters);
if (length(binaries)>0)	{
if (length(binaries)==1)	{
clean_characters_binary <- array(0,dim=c(notu,1));
clean_characters_binary[,1] <- clean_characters[,binaries];
} else	{
clean_characters_binary <- clean_characters[,binaries];
}
autapomorphic_binaries <- count_autapomorphic_characters(chmatrix=clean_characters_binary,nstates[binaries]);
} else	{
autapomorphic_binaries <- 0;
}
if (length(multistates)>0)	{
if (length(multistates)==1)	{
clean_characters_multistate <- array(0,dim=c(notu,1))
clean_characters_multistate[,1] <- clean_characters[,multistates];
} else	{
clean_characters_multistate <- clean_characters[,multistates];
}
autapomorphic_multistates_1 <- count_autapomorphic_characters(chmatrix=clean_characters_multistate,nstates[multistates]);
autapomorphic_multistates_2 <- count_autapomorphic_states(chmatrix=clean_characters_multistate,nstates[multistates]);
} else	{
autapomorphic_multistates_1 <- autapomorphic_multistates_2 <- 0;
}
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters[,useful],states=nstates[useful],types=rep(0,useful_characters));
reducibles <- identicals <- 0;
#	for (tx in 1:(notu-1))	{
while (tx < notu)	{
others <- (1:notu)[(1:notu) > tx];
identicals <- identicals + (sum(disp[tx,others]==0));
if (sum(disp[tx,others]==0)>0)	reducibles <- reducibles +1
tx <- tx+1;
identicals;
reducibles;
}
#	identicals <- identicals/2
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,useful_characters,binary_characters,multistate_characters,total_states,autapomorphic_binaries,autapomorphic_multistates_1,autapomorphic_multistates_2,missing,identicals,reducibles));
#	if (length(apos)>0)	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,binary_characters,multistate_characters,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals,reducibles));
#		} else	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),binary_characters,multistate_characters,notu,nchars,0,0,0,missing,identicals));
#		}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Total_States","Autapomorphic_Binary","Autapomoprhic_Multistate","Autapomoprhic_Multistate_States","Prop_Missing","Identicals","Reducibles")
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
#colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
setwd("~/Documents/R Projects/ Data/Original Data Matrices/09. Edrioasteroids")
analysis <- "Edrioasteroids";
data_sets <- read.table(paste(analysis,".txt",sep=""));
UNKNOWN <- -11;
INAP <- -22;
#matrix_one <- paste("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/",data_sets[1,1],sep="")
#setwd("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/")
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1;
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs);
nchars <- length(xxx$States);
clean_characters <- scourgify_character_matrix(chmatrix=xxx$Matrix);
nstates <- count_states(chmatrix=clean_characters);
binaries <- (1:nchars)[nstates==2];
multistates <- (1:nchars)[nstates>2]
invariants <- (1:nchars)[nstates==1];
total_states <- length(invariants)+(2*length(binaries)) + sum(nstates[multistates]);
invariant_characters <- length(invariants);
binary_characters <- length(binaries);
multistate_characters <- length(multistates);
real_nchars <- invariant_characters+binary_characters+multistate_characters;
useful <- sort(c(invariants,binaries,multistates));
useful_characters <- length(useful);
missing <- sum(clean_characters[,useful]==UNKNOWN)/(notu*useful_characters);
if (length(binaries)>0)	{
if (length(binaries)==1)	{
clean_characters_binary <- array(0,dim=c(notu,1));
clean_characters_binary[,1] <- clean_characters[,binaries];
} else	{
clean_characters_binary <- clean_characters[,binaries];
}
autapomorphic_binaries <- count_autapomorphic_characters(chmatrix=clean_characters_binary,nstates[binaries]);
} else	{
autapomorphic_binaries <- 0;
}
if (length(multistates)>0)	{
if (length(multistates)==1)	{
clean_characters_multistate <- array(0,dim=c(notu,1))
clean_characters_multistate[,1] <- clean_characters[,multistates];
} else	{
clean_characters_multistate <- clean_characters[,multistates];
}
autapomorphic_multistates_1 <- count_autapomorphic_characters(chmatrix=clean_characters_multistate,nstates[multistates]);
autapomorphic_multistates_2 <- count_autapomorphic_states(chmatrix=clean_characters_multistate,nstates[multistates]);
} else	{
autapomorphic_multistates_1 <- autapomorphic_multistates_2 <- 0;
}
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters[,useful],states=nstates[useful],types=rep(0,useful_characters));
reducibles <- identicals <- 0;
#	for (tx in 1:(notu-1))	{
while (tx < notu)	{
others <- (1:notu)[(1:notu) > tx];
identicals <- identicals + (sum(disp[tx,others]==0));
if (sum(disp[tx,others]==0)>0)	reducibles <- reducibles +1
tx <- tx+1;
identicals;
reducibles;
}
#	identicals <- identicals/2
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,useful_characters,binary_characters,multistate_characters,total_states,autapomorphic_binaries,autapomorphic_multistates_1,autapomorphic_multistates_2,missing,identicals,reducibles));
#	if (length(apos)>0)	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,binary_characters,multistate_characters,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals,reducibles));
#		} else	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),binary_characters,multistate_characters,notu,nchars,0,0,0,missing,identicals));
#		}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Total_States","Autapomorphic_Binary","Autapomoprhic_Multistate","Autapomoprhic_Multistate_States","Prop_Missing","Identicals","Reducibles")
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
#colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
setwd("~/Documents/R Projects/ Data/Original Data Matrices/11. Blastozoans")
analysis <- "Blastozoans";
data_sets <- read.table(paste(analysis,".txt",sep=""));
UNKNOWN <- -11;
INAP <- -22;
#matrix_one <- paste("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/",data_sets[1,1],sep="")
#setwd("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/")
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1;
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs);
nchars <- length(xxx$States);
clean_characters <- scourgify_character_matrix(chmatrix=xxx$Matrix);
nstates <- count_states(chmatrix=clean_characters);
binaries <- (1:nchars)[nstates==2];
multistates <- (1:nchars)[nstates>2]
invariants <- (1:nchars)[nstates==1];
total_states <- length(invariants)+(2*length(binaries)) + sum(nstates[multistates]);
invariant_characters <- length(invariants);
binary_characters <- length(binaries);
multistate_characters <- length(multistates);
real_nchars <- invariant_characters+binary_characters+multistate_characters;
useful <- sort(c(invariants,binaries,multistates));
useful_characters <- length(useful);
missing <- sum(clean_characters[,useful]==UNKNOWN)/(notu*useful_characters);
if (length(binaries)>0)	{
if (length(binaries)==1)	{
clean_characters_binary <- array(0,dim=c(notu,1));
clean_characters_binary[,1] <- clean_characters[,binaries];
} else	{
clean_characters_binary <- clean_characters[,binaries];
}
autapomorphic_binaries <- count_autapomorphic_characters(chmatrix=clean_characters_binary,nstates[binaries]);
} else	{
autapomorphic_binaries <- 0;
}
if (length(multistates)>0)	{
if (length(multistates)==1)	{
clean_characters_multistate <- array(0,dim=c(notu,1))
clean_characters_multistate[,1] <- clean_characters[,multistates];
} else	{
clean_characters_multistate <- clean_characters[,multistates];
}
autapomorphic_multistates_1 <- count_autapomorphic_characters(chmatrix=clean_characters_multistate,nstates[multistates]);
autapomorphic_multistates_2 <- count_autapomorphic_states(chmatrix=clean_characters_multistate,nstates[multistates]);
} else	{
autapomorphic_multistates_1 <- autapomorphic_multistates_2 <- 0;
}
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters[,useful],states=nstates[useful],types=rep(0,useful_characters));
reducibles <- identicals <- 0;
#	for (tx in 1:(notu-1))	{
while (tx < notu)	{
others <- (1:notu)[(1:notu) > tx];
identicals <- identicals + (sum(disp[tx,others]==0));
if (sum(disp[tx,others]==0)>0)	reducibles <- reducibles +1
tx <- tx+1;
identicals;
reducibles;
}
#	identicals <- identicals/2
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,useful_characters,binary_characters,multistate_characters,total_states,autapomorphic_binaries,autapomorphic_multistates_1,autapomorphic_multistates_2,missing,identicals,reducibles));
#	if (length(apos)>0)	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,binary_characters,multistate_characters,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals,reducibles));
#		} else	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),binary_characters,multistate_characters,notu,nchars,0,0,0,missing,identicals));
#		}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Total_States","Autapomorphic_Binary","Autapomoprhic_Multistate","Autapomoprhic_Multistate_States","Prop_Missing","Identicals","Reducibles")
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
#colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
setwd("~/Documents/R Projects/ Data/Original Data Matrices/12. Crinoids")
analysis <- "Crinoids";
data_sets <- read.table(paste(analysis,".txt",sep=""));
UNKNOWN <- -11;
INAP <- -22;
#matrix_one <- paste("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/",data_sets[1,1],sep="")
#setwd("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/")
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1;
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs);
nchars <- length(xxx$States);
clean_characters <- scourgify_character_matrix(chmatrix=xxx$Matrix);
nstates <- count_states(chmatrix=clean_characters);
binaries <- (1:nchars)[nstates==2];
multistates <- (1:nchars)[nstates>2]
invariants <- (1:nchars)[nstates==1];
total_states <- length(invariants)+(2*length(binaries)) + sum(nstates[multistates]);
invariant_characters <- length(invariants);
binary_characters <- length(binaries);
multistate_characters <- length(multistates);
real_nchars <- invariant_characters+binary_characters+multistate_characters;
useful <- sort(c(invariants,binaries,multistates));
useful_characters <- length(useful);
missing <- sum(clean_characters[,useful]==UNKNOWN)/(notu*useful_characters);
if (length(binaries)>0)	{
if (length(binaries)==1)	{
clean_characters_binary <- array(0,dim=c(notu,1));
clean_characters_binary[,1] <- clean_characters[,binaries];
} else	{
clean_characters_binary <- clean_characters[,binaries];
}
autapomorphic_binaries <- count_autapomorphic_characters(chmatrix=clean_characters_binary,nstates[binaries]);
} else	{
autapomorphic_binaries <- 0;
}
if (length(multistates)>0)	{
if (length(multistates)==1)	{
clean_characters_multistate <- array(0,dim=c(notu,1))
clean_characters_multistate[,1] <- clean_characters[,multistates];
} else	{
clean_characters_multistate <- clean_characters[,multistates];
}
autapomorphic_multistates_1 <- count_autapomorphic_characters(chmatrix=clean_characters_multistate,nstates[multistates]);
autapomorphic_multistates_2 <- count_autapomorphic_states(chmatrix=clean_characters_multistate,nstates[multistates]);
} else	{
autapomorphic_multistates_1 <- autapomorphic_multistates_2 <- 0;
}
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters[,useful],states=nstates[useful],types=rep(0,useful_characters));
reducibles <- identicals <- 0;
#	for (tx in 1:(notu-1))	{
while (tx < notu)	{
others <- (1:notu)[(1:notu) > tx];
identicals <- identicals + (sum(disp[tx,others]==0));
if (sum(disp[tx,others]==0)>0)	reducibles <- reducibles +1
tx <- tx+1;
identicals;
reducibles;
}
#	identicals <- identicals/2
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,useful_characters,binary_characters,multistate_characters,total_states,autapomorphic_binaries,autapomorphic_multistates_1,autapomorphic_multistates_2,missing,identicals,reducibles));
#	if (length(apos)>0)	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,binary_characters,multistate_characters,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals,reducibles));
#		} else	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),binary_characters,multistate_characters,notu,nchars,0,0,0,missing,identicals));
#		}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Total_States","Autapomorphic_Binary","Autapomoprhic_Multistate","Autapomoprhic_Multistate_States","Prop_Missing","Identicals","Reducibles")
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
#colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
setwd("~/Documents/R Projects/ Data/Original Data Matrices/12. Crinoids")
setwd("~/Documents/R Projects/ Data/Original Data Matrices/13. Echinoids")
analysis <- "Echinoids";
data_sets <- read.table(paste(analysis,".txt",sep=""));
UNKNOWN <- -11;
INAP <- -22;
#matrix_one <- paste("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/",data_sets[1,1],sep="")
#setwd("~/Documents/Research/Done/Stratigraphic Compatibility/2012 Attempt/Original Data Matrices/05. Trilobites/05A. Cambrian Trilobites/")
ttl_d <- nrow(data_sets);
apomorphy_totals <- c();
cm <- 1;
while (cm <= ttl_d)	{
nexus_file_name <- as.character(data_sets[cm,1]);
xxx <- accio_data_from_nexus_file(nexus_file_name);
notu <- length(xxx$OTUs);
nchars <- length(xxx$States);
clean_characters <- scourgify_character_matrix(chmatrix=xxx$Matrix);
nstates <- count_states(chmatrix=clean_characters);
binaries <- (1:nchars)[nstates==2];
multistates <- (1:nchars)[nstates>2]
invariants <- (1:nchars)[nstates==1];
total_states <- length(invariants)+(2*length(binaries)) + sum(nstates[multistates]);
invariant_characters <- length(invariants);
binary_characters <- length(binaries);
multistate_characters <- length(multistates);
real_nchars <- invariant_characters+binary_characters+multistate_characters;
useful <- sort(c(invariants,binaries,multistates));
useful_characters <- length(useful);
missing <- sum(clean_characters[,useful]==UNKNOWN)/(notu*useful_characters);
if (length(binaries)>0)	{
if (length(binaries)==1)	{
clean_characters_binary <- array(0,dim=c(notu,1));
clean_characters_binary[,1] <- clean_characters[,binaries];
} else	{
clean_characters_binary <- clean_characters[,binaries];
}
autapomorphic_binaries <- count_autapomorphic_characters(chmatrix=clean_characters_binary,nstates[binaries]);
} else	{
autapomorphic_binaries <- 0;
}
if (length(multistates)>0)	{
if (length(multistates)==1)	{
clean_characters_multistate <- array(0,dim=c(notu,1))
clean_characters_multistate[,1] <- clean_characters[,multistates];
} else	{
clean_characters_multistate <- clean_characters[,multistates];
}
autapomorphic_multistates_1 <- count_autapomorphic_characters(chmatrix=clean_characters_multistate,nstates[multistates]);
autapomorphic_multistates_2 <- count_autapomorphic_states(chmatrix=clean_characters_multistate,nstates[multistates]);
} else	{
autapomorphic_multistates_1 <- autapomorphic_multistates_2 <- 0;
}
disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters[,useful],states=nstates[useful],types=rep(0,useful_characters));
reducibles <- identicals <- 0;
#	for (tx in 1:(notu-1))	{
while (tx < notu)	{
others <- (1:notu)[(1:notu) > tx];
identicals <- identicals + (sum(disp[tx,others]==0));
if (sum(disp[tx,others]==0)>0)	reducibles <- reducibles +1
tx <- tx+1;
identicals;
reducibles;
}
#	identicals <- identicals/2
#cbind(ceiling((1:(notu^2))[(disp %in% 0)]/notu),((1:(notu^2))[(disp %in% 0)] %% notu))
apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,useful_characters,binary_characters,multistate_characters,total_states,autapomorphic_binaries,autapomorphic_multistates_1,autapomorphic_multistates_2,missing,identicals,reducibles));
#	if (length(apos)>0)	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),notu,nchars,binary_characters,multistate_characters,nrow(apos),sum(apos[,2]==2),sum(apos[,2]>2),missing,identicals,reducibles));
#		} else	{
#		apomorphy_totals <- rbind(apomorphy_totals,c(analysis,as.character(data_sets[cm,1]),binary_characters,multistate_characters,notu,nchars,0,0,0,missing,identicals));
#		}
cm <- cm+1
#	disp <- pairwise_disimilarity_discrete(chmatrix=clean_characters,states=xxx$States,types=rep(0,length(xxx$States)))
}
colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Total_States","Autapomorphic_Binary","Autapomoprhic_Multistate","Autapomoprhic_Multistate_States","Prop_Missing","Identicals","Reducibles")
outfile <- paste(analysis,"_Apomorphies.txt",sep="");
#colnames(apomorphy_totals) <- c("Data_group","Study","OTUs","Characters","Binary","Multistate","Apomorphic_Characters","Apomorphic_Binaries","Apomorphic_Multistates","Prop_Missing","Identicals");
write.table(apomorphy_totals,file=outfile,col.names = TRUE,row.names=FALSE,sep="\t")
autapomorphic_binaries+autapomorphic_multistates_1
autapomorphic_binaries
