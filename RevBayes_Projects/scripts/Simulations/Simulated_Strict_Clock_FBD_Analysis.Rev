clear();
setwd("/Users/peterjwagner/Documents/RevBayes_Projects/");	#CHANGE THIS TO THE FOLDER IN WHICH YOU HAVE REVBAYES SCRIPTS & DATA!!!
source("scripts/Imperio_Default_Settings.Rev");

###############################################################################
# This is (these are) the nexus file(s) that you are using for this analysis  #
#     Make sure that filenames & directories are correct!!!
###############################################################################
filenames <- v("data/Simulated_Matrix_2_States.nex", "data/Simulated_Matrix_3_States.nex");

partition_states <- v(2,3);
partition_ordering <- v("unordered","unordered");
coding_bias <- v("all","all");	## prepare for ascertainment bias in binary characters; 'all': invariant & autapomorphies present; 'variable': all vary & autapomorphies present; 'informative': all vary & no autapomorphies.
outgroup = clade("taxon_00");
ingroup = clade("taxon_01","taxon_02","taxon_03","taxon_04","taxon_05","taxon_06","taxon_07","taxon_08","taxon_09","taxon_10","taxon_11","taxon_12","taxon_13","taxon_14","taxon_15","taxon_16","taxon_17","taxon_18","taxon_19","taxon_20","taxon_21","taxon_22","taxon_23","taxon_24","taxon_25");
among_char_var <- "lognormal";		# enter "gamma" or "lognormal; rate variation among characters"
clock_model <- "strict";					# enter "strict" for strict clock, "lognormal" for relaxed clock with lognormal; we'll add "dirichlet" for relaxed dirichlet eventually);
max_age <- 6.2;                   # used if big_bang==TRUE;

############################################################################
#          Set a variable for the number of character partitions           #
############################################################################
n_data_subsets <- filenames.size();
taxa <- readTaxonData(file="data/simulated_fossil_intervals.tsv");
n_taxa <- taxa.size();
n_branches <- (2 * n_taxa) - 2;
moves = VectorMoves();

############################################################################
# Set up appropriate parameters for speciation, extinction & sampling.     #
#      We also set up the tree search here.                                #
#                                                                          #
# NOTE: This will sometimes freeze; if it does, then edit the script so    #
#      origination & extinction are set to 1.0. This usually works!        #
############################################################################
source("scripts/Accio_Simulated_Range_Based_FBD_Parameterization.Rev");

############################################################################
# Set up appropriate Q-matrices for the partitions
#   as well as the among-character and among-branch
#   rate variation models
#  (Again, make sure that the directory is OK)
############################################################################
source("scripts/Accio_Parameters_for_Analysis_Partitioned_by_States_and_Ordering_and_Class.Rev");

############################################################################
# Wrap it all into your model
############################################################################
mymodel = model(tau,Q);		# tau should have FBD & character evolution models attached to it

############################################################################
# Add monitors & commence MCMC'ing
#  (Again, make sure that the source directory is OK)
# NOTE: the program saves trees once every printgen generations; so, the
#   lower the number, the more trees you save.
############################################################################
monitors = VectorMonitors();
monitors.append(mnModel(filename="output/simulated_clock.log", printgen=10));
monitors.append(mnFile(tau, filename="output/simulated_clock.trees",printgen=10,separator=TAB,tau));
#monitors.append(mnModel(filename="/Users/peterwagner/Dropbox/RevBayes_Output/cincta_nonfeeding_vs_feeding_clock.log", printgen=10));
#monitors.append(mnFile(tau, filename="/Users/peterwagner/Dropbox/RevBayes_Output/cincta_nonfeeding_vs_feeding_clock.trees",printgen=10,separator=TAB,tau));
monitors.append(mnScreen(printgen=500,mean_rt,num_samp_anc,origin_time,summed_gaps));

    ################################################################################
    # Here are some starting parameters for your MCMC analysis: but use your own!
    # NOTE: as the number of moves increases, the greater the number of generations
    #     we need to make a thorough search of parameter space.  So, as taxa and
    #     and complexity of character evolution models increases, the greater the
    #     number of generations you should use.
    ################################################################################
no_runs=3;		# Number of independent MCMC analyses. (Even MCMC can get stuck in local optima!)
burnin_gens=10000;	# Number of generations for the burnin pre-analysis (to tune parameters).
tuning_int=200;		# Frequency at which burnin analysis will tune parameters (in generations).
running_gens=1000000;	# Number of generations for the real analysis; the bigger the analysis, the more you usually need.

# Now, go read Anna Karenina.....
source("scripts/Expecto_MCMC_with_Partitioned_Characters.Rev");
# .......
# Sigh: nobody remembers elementary train safety anymore.  Oh, your trees are done.

############################################################################
# Prepare MCMC output to get consensus tree(s) and the most probable tree(s)
#    As always, double check the directories....
############################################################################
tree_files <- v("output/cincta_nonfeeding_vs_feeding_clock_run_1.trees","output/cincta_nonfeeding_vs_feeding_clock_run_2.trees","output/cincta_nonfeeding_vs_feeding_clock_run_3.trees");
maj_rule_files <- v("output/cincta_nonfeeding_vs_feeding_clock_run_1_maj_rule.tre","output/cincta_nonfeeding_vs_feeding_clock_run_2_maj_rule.tre","output/cincta_nonfeeding_vs_feeding_clock_run_3_maj_rule.tre");
most_probable_files <- v("output/cincta_nonfeeding_vs_feeding_clock_run_1_simple_map.tre","output/cincta_nonfeeding_vs_feeding_clock_run_2_simple_map.tre","output/cincta_nonfeeding_vs_feeding_clock_run_3_simple_map.tre");

source("scripts/Accio_Consensus_Tree.Rev");

source("scripts/Accio_Most_Probable_Tree.Rev");
