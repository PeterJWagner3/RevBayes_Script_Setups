# UNCORRELATED LOGNORMAL RATES
# (mu = log(M) - (sigma^2 / 2))
# *can be modified to use exponential or independent gamma rates
# written by D. Wright 2019-06
# n_taxa: number of taxa;
#NOTE: This varies both the geometric mean and the log-variance.


#get number of branches
n_branches <- 2 * n_taxa - 2

# set hyperpriors
ucln_mean ~ dnExponential(2.0)
ucln_sigma ~ dnExponential(3.0) #standard deviation
ucln_var := ucln_sigma * ucln_sigma # variance

# set deterministic parameter giving mu on branch rates
ucln_mu := ln(ucln_mean) - (ucln_var * 0.5)

# mcmc moves
moves.append( mvScale(ucln_mean, lambda=1.0, tune=true, weight=4.0));
moves.append( mvScale(ucln_sigma, lambda=0.5, tune=true, weight=4.0));

# assign rates to branches and add mcmc move
for (bb in 1:n_branches)	{
	branch_rates[bb] ~ dnLnorm(ucln_mu, ucln_sigma);
	moves.append( mvScale(branch_rates[bb], lambda=1, tune=true, weight=2.0));
	}

# mcmc moves to alter all branches in the same way;
moves.append( mvVectorScale(branch_rates,lambda=1.0,tune=true,weight=2.0));
moves.append( mvVectorSingleElementScale(branch_rates,lambda=30.0,tune=true,weight=1.0));

# set deterministic node to monitor
mean_rt := mean(branch_rates);
