########################################################################
# Set up appropriate parameters for speciation, extinction & sampling  #
#   "Seed" numbers based on analyses of Paleobiology Database data.    #
########################################################################
# Diversification Rates based on Ammonoidea
speciation_rate ~ dnExponential(4.704);
extinction_rate ~ dnExponential(4.704);
# NOTE: If it gets stuck in this script, then set origination & extinction to 1.0
diversification := speciation_rate - extinction_rate;
turnover := extinction_rate/speciation_rate;
moves.append(mvScale(speciation_rate, lambda=0.01, weight=5));
moves.append(mvScale(speciation_rate, lambda=0.10, weight=3));
moves.append(mvScale(speciation_rate, lambda=1.00, weight=1));
moves.append(mvScale(extinction_rate, lambda=0.01, weight=5));
moves.append(mvScale(extinction_rate, lambda=0.10, weight=3));
moves.append(mvScale(extinction_rate, lambda=1.00, weight=1));

# Fossil Sampling Rates based on rock units occupied by Ammonoidea
psi ~ dnExponential(4.215);
completeness := psi/(extinction_rate+psi);
moves.append(mvScale(psi, lambda=0.01, weight=5));
moves.append(mvScale(psi, lambda=0.10, weight=3));
moves.append(mvScale(psi, lambda=1.00, weight=1));

# Proportional Taxon Sampling of Youngest Time Slice
rho <- 0.284;	# 'extant' sampling.

# Establish Basal Divergence Time
origin_time ~ dnUnif(9.1, 9.65);
moves.append(mvSlide(origin_time, delta=0.01, weight=5));
moves.append(mvSlide(origin_time, delta=0.10, weight=3));
moves.append(mvSlide(origin_time, delta=1.00, weight=1));

fbd_dist = dnFBDRP(origin=origin_time, lambda=speciation_rate, mu=extinction_rate, psi=psi, rho=rho, taxa=taxa);
############################################################################
#                               Set up tree                                #
############################################################################
# create the vector of clade constraints
constraints = v(ingroup);
tau ~ dnConstrainedTopology(fbd_dist,constraints=constraints);

moves.append(mvFNPR(tau, weight=n_branches/2));                              # time-tree pruning & grafting
moves.append(mvNNI(tau, weight=n_branches/2));                               # nearest-neighbor interchanges
moves.append(mvCollapseExpandFossilBranch(tau,origin_time,weight=n_taxa/4)); # consider ancestor-descendant rather than sister species
moves.append(mvNodeTimeSlideUniform(tau, weight=n_branches/2));              # adjust divergence times
moves.append(mvRootTimeSlideUniform(tau, origin_time, weight=5));            # adjust basaldivergence time.

num_samp_anc := tau.numSampledAncestors();
for (bn in 1:n_branches)	{
	divergence_dates[bn]:=tau.nodeAge(bn)                   # this is when a hypothesized ancestor diverges or an OTU is first seen;
	branch_lengths[bn]:=tau.branchLength(bn);               # this is branch *duration* not expected change!
	origin_dates[bn]:=tau.branchLength(bn)+tau.nodeAge(bn); # this is when a lineage diverged from its ancestor
	}
summed_gaps := sum(branch_lengths);

clade_extant = clade("Spathites","Infabricaticeras");
age_extant := tmrca(tau, clade_extant);	# There is no particularly good reason to keep this!

