########################################################################
# Set up appropriate parameters for speciation, extinction & sampling  #
#   "Seed" numbers based on analyses of Paleobiology Database data.    #
########################################################################
# Diversification Rates based on Trilobita
origination_rate ~ dnExponential(0.625);
moves.append(mvScale(origination_rate, lambda=0.01, weight=5));
moves.append(mvScale(origination_rate, lambda=0.10, weight=3));
moves.append(mvScale(origination_rate, lambda=1.00, weight=1));

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# NOTE: FBD scripts often allow extinction to vary independently of speciation;     #
# However, empirical studies show that these two rates usually are close to equal   #
#               and they definitely are not independent.                            #
# So, here we'll make turnover (ext/orig) an independent variable and use it        #
#               to scale extinction relative to origination                         #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
turnover ~ dnUnif(0.9, 1.05);
moves.append(mvSlide(turnover, delta=0.01, weight=5));
moves.append(mvSlide(turnover, delta=0.10, weight=3));
moves.append(mvSlide(turnover, delta=1.00, weight=1));
extinction_rate := turnover*origination_rate;

# Fossil Sampling Rates based on Rocks & Sites Averaged occupied by Trilobita
psi ~ dnExponential(0.223);
moves.append(mvScale(psi, lambda=0.01, weight=5));
moves.append(mvScale(psi, lambda=0.10, weight=3));
moves.append(mvScale(psi, lambda=1.00, weight=1));

# Proportional Taxon Sampling of Youngest Time Slice
rho <- 0.153;	# 'extant' sampling.

# Establish Basal Divergence Time
origin_time ~ dnUnif(145, 133);
moves.append(mvSlide(origin_time, delta=0.01, weight=5));
moves.append(mvSlide(origin_time, delta=0.10, weight=3));
moves.append(mvSlide(origin_time, delta=1.00, weight=1));

fbd_dist = dnFBDRP(origin=origin_time, lambda=origination_rate, mu=extinction_rate, psi=psi, rho=rho, taxa=taxa);
############################################################################
#                               Set up tree                                #
############################################################################
# create the vector of clade constraints
constraints = v(ingroup);
tau ~ dnConstrainedTopology(fbd_dist,constraints=constraints);

moves.append(mvFNPR(tau, weight=n_branches/2));                              # time-tree pruning & grafting
moves.append(mvNNI(tau, weight=n_branches/2));                               # nearest-neighbor interchanges
moves.append(mvCollapseExpandFossilBranch(tau,origin_time,weight=n_taxa/4)); # consider ancestor-descendant rather than sister species
moves.append(mvNodeTimeSlideUniform(tau, weight=n_branches/2));              # adjust divergence times
moves.append(mvRootTimeSlideUniform(tau, origin_time, weight=5));            # adjust basal divergence time.

num_samp_anc := tau.numSampledAncestors();
for (bn in 1:n_branches)	{
	divergence_dates[bn]:=tau.nodeAge(bn)                   # this is when a hypothesized ancestor diverges or an OTU is first seen;
	branch_lengths[bn]:=tau.branchLength(bn);               # this is branch *duration* not expected change!
	origin_dates[bn]:=tau.branchLength(bn)+tau.nodeAge(bn); # this is when a lineage diverged from its ancestor
	}

#### Set up deterministic variables for output purposes only  ####
fbd_p:=origination_rate;		# origination rate for output
fbd_q:=origination_rate;		# extinction rate for output
fbd_r:=psi;		# sampling rate for output
completeness := psi/(extinction_rate+psi);
diversification := origination_rate - extinction_rate;
summed_gaps := sum(branch_lengths);

clade_extant = clade("Phillipsia_belgica");
