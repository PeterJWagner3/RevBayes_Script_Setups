########################################################################
# Set up appropriate parameters for speciation, extinction & sampling #
# "Seed" numbers based on analyses of Paleobiology Database data. #
########################################################################
#timeline <- v(38.6, 43.0, 49.1); # post-Danian/Danian/Maastrichtian/Pre-Maastrichtian
#sampling <- v(1.83,1.33,1.40,1.64) # post-Danian/Danian/Maastrichtian/Pre-Maastrichtian
# Initial Diversification Rates based on Meso-Cenozoic Bivalvia
nbins <- timeline.size()+1;
for (i in 1:nbins) {
# print(i);
 fbd_p[i] ~ dnExponential(1/0.573);
 moves.append(mvScale(fbd_p[i], lambda=0.01, weight=5));
 moves.append(mvScale(fbd_p[i], lambda=0.10, weight=3));
 moves.append(mvScale(fbd_p[i], lambda=1.00, weight=1));

 turnover[i] ~ dnLognormal(0.945, 1.926745);

 moves.append(mvSlide(turnover[i], delta=0.01, weight=5));
 moves.append(mvSlide(turnover[i], delta=0.10, weight=3));
 moves.append(mvSlide(turnover[i], delta=1.00, weight=1));

# Fossil Sampling Rates based on rocks and sites averaged occupied by Meso-Cenozoic Bivalvia
 fbd_r[i] ~ dnExponential(sampling[i]);
 moves.append(mvScale(fbd_r[i], lambda=0.01, weight=5));
 moves.append(mvScale(fbd_r[i], lambda=0.10, weight=3));
 moves.append(mvScale(fbd_r[i], lambda=1.00, weight=1));
 } # end skyline loops

fbd_q := turnover*fbd_p;

# Proportional Taxon Sampling of Youngest Time Slice
rho <- 0.2; # 'extant' sampling.

# Establish Basal Divergence Time
origin_time ~ dnUnif(60.70,65.7);
moves.append(mvSlide(origin_time, delta=0.01, weight=5));
moves.append(mvSlide(origin_time, delta=0.10, weight=3));
moves.append(mvSlide(origin_time, delta=1.00, weight=1));

fbd_dist = dnBDSTP(originAge=origin_time, lambda=fbd_p, mu=fbd_q, psi=fbd_r, rho=rho, timeline=timeline, taxa=taxa);

############################################################################
# Set up tree #
############################################################################
# create the vector of clade constraints
constraints = v(ingroup);
tau ~ dnConstrainedTopology(fbd_dist,constraints=constraints);

moves.append(mvFNPR(tau, weight=n_branches/2));                              # time-tree pruning & grafting
moves.append(mvNNI(tau, weight=n_branches/2));                               # nearest-neighbor interchanges
moves.append(mvCollapseExpandFossilBranch(tau,origin_time,weight=n_taxa/4)); # consider ancestor-descendant rather than sister species
moves.append(mvNodeTimeSlideUniform(tau, weight=n_branches/2));              # adjust divergence times
moves.append(mvRootTimeSlideUniform(tau, origin_time, weight=5));            # adjust basaldivergence time.

num_samp_anc := tau.numSampledAncestors();
for (bn in 1:n_branches) {
 divergence_dates[bn]:=tau.nodeAge(bn)                   # this is when a hypothesized ancestor diverges or an OTU is first seen;
 branch_lengths[bn]:=tau.branchLength(bn);               # this is branch *duration* not expected change!
 origin_dates[bn]:=tau.branchLength(bn)+tau.nodeAge(bn); # this is when a lineage diverged from its ancestor
}
summed_gaps := sum(branch_lengths);
fbd_tree:=tau;
clade_extant = clade("Spissatella_trailli");
age_extant := tmrca(tau, clade_extant);	# There is no particularly good reason to keep this!
